/**
 * generated by Xtext 2.24.0
 */
package org.xtext.example.mydsl.mmlg.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.xtext.example.mydsl.mmlg.MmlgPackage;
import org.xtext.example.mydsl.mmlg.StratificationMethod;
import org.xtext.example.mydsl.mmlg.Validation;
import org.xtext.example.mydsl.mmlg.ValidationMetric;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Validation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.mmlg.impl.ValidationImpl#getStratification <em>Stratification</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.mmlg.impl.ValidationImpl#getMetric <em>Metric</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ValidationImpl extends MinimalEObjectImpl.Container implements Validation
{
  /**
   * The cached value of the '{@link #getStratification() <em>Stratification</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStratification()
   * @generated
   * @ordered
   */
  protected StratificationMethod stratification;

  /**
   * The cached value of the '{@link #getMetric() <em>Metric</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetric()
   * @generated
   * @ordered
   */
  protected EList<ValidationMetric> metric;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ValidationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MmlgPackage.Literals.VALIDATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StratificationMethod getStratification()
  {
    return stratification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStratification(StratificationMethod newStratification, NotificationChain msgs)
  {
    StratificationMethod oldStratification = stratification;
    stratification = newStratification;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MmlgPackage.VALIDATION__STRATIFICATION, oldStratification, newStratification);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStratification(StratificationMethod newStratification)
  {
    if (newStratification != stratification)
    {
      NotificationChain msgs = null;
      if (stratification != null)
        msgs = ((InternalEObject)stratification).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MmlgPackage.VALIDATION__STRATIFICATION, null, msgs);
      if (newStratification != null)
        msgs = ((InternalEObject)newStratification).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MmlgPackage.VALIDATION__STRATIFICATION, null, msgs);
      msgs = basicSetStratification(newStratification, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MmlgPackage.VALIDATION__STRATIFICATION, newStratification, newStratification));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ValidationMetric> getMetric()
  {
    if (metric == null)
    {
      metric = new EDataTypeEList<ValidationMetric>(ValidationMetric.class, this, MmlgPackage.VALIDATION__METRIC);
    }
    return metric;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MmlgPackage.VALIDATION__STRATIFICATION:
        return basicSetStratification(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MmlgPackage.VALIDATION__STRATIFICATION:
        return getStratification();
      case MmlgPackage.VALIDATION__METRIC:
        return getMetric();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MmlgPackage.VALIDATION__STRATIFICATION:
        setStratification((StratificationMethod)newValue);
        return;
      case MmlgPackage.VALIDATION__METRIC:
        getMetric().clear();
        getMetric().addAll((Collection<? extends ValidationMetric>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MmlgPackage.VALIDATION__STRATIFICATION:
        setStratification((StratificationMethod)null);
        return;
      case MmlgPackage.VALIDATION__METRIC:
        getMetric().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MmlgPackage.VALIDATION__STRATIFICATION:
        return stratification != null;
      case MmlgPackage.VALIDATION__METRIC:
        return metric != null && !metric.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (metric: ");
    result.append(metric);
    result.append(')');
    return result.toString();
  }

} //ValidationImpl
